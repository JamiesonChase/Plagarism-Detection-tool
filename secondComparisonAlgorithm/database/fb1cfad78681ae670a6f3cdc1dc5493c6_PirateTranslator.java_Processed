public class PirateTranslator {
    V[] V = {S, S, S, S, S,
			S, S, S, S,
			S, S,
			S, S, S,
			S, S, S, S};
    V[] V = {S,S,S};
    V[] V = {S,S,S};
    V[] V = {S, S, S, S, S,
			   S, S, S, S,
			   S, S,
			   S, S, S,
			   S, S,
			   S, S};
    V[] V = {S, S, S, S};
    V[] V = {S, S, S, S};
    V[] V = new V[25];
    int V = 0;
    public V F(V V) {
    	V = V.toLowerCase();
		for (int V = 0; V < (V.length); V++) {
			V = (V.replace(V[V], V[V]));
			}
		boolean V = false;
		boolean V = false;
    	for (int V = 0; V < 3; V++) {
				if (V.contains(V[V])) {
					V = true;
				}
				if (V.contains(V[V])) {
					V = true;
				}
			}
    	if (!(V && V)) {
			if (V) {
				V += V[3];
			}
			if (V) {
				V += V[3];
			}
		}
		V = (V.replace(S, S));
		return V;
	 }
}