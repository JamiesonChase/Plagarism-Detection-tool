public class PirateTranslator {
	V[] V = {S, S, S, S, S,
			S, S, S, S,
			S, S,
			S, S, S,
			S, S, S, S};
    V[] V = {S, S, S, S, S,
			   S, S, S, S,
			   S, S,
			   S, S, S,
			   S, S,
			   S, S};
    V[] V = {S, S, S};
    V[] V = {S, S, S};
    V[] V = new V[25];
    int V = 0;
    public V F(V V) {
    	int V = 0;
    	int V = 0;
    	V=V.toLowerCase();
		for (int V=0; V<V.length; V++) {
			if (V.contains(V[V])) {
				if (V.length()==V[V].length() || V.contains(S+V[V]+S) || V.contains(S+V[V])
					|| V.contains(V[V]+S)) V=(V.replace(V[V], V[V]));
			}
		}
		for (int V=0; V<3; V++) {
			if (V.contains(V[V])) V++;
			if (V.contains(V[V])) V++;
			}
			if ((V==0 && V==0) || (V!=0 && V!=0)) V=V;
			else {
				if (V>0) V=V+S;
				if (V>0) V=V+S;
		}
			return V;
    }
}