public class PirateTranslator {
    V[] V = {S, S, S, S, S,
			S, S, S, S,
			S, S,
			S, S, S,
			S, S, S, S};
    V[] V = {S, S, S, S, S,
			   S, S, S, S,
			   S, S,
			   S, S, S,
			   S, S,
			   S, S};
    V[] V = {S, S, S};
    V[] V = {S, S, S};
    V[] V = new V[25];
    int V = 0;
  private boolean F(V V){
    for( V V : V){
      if(V.contains(V)) return true;
    }
    return false;
  }
  private boolean F(V V){
    for( V V : V){
      if(V.contains(V)) return true;
    }
    return false;
  }
    public V F(V V) {
      V = V.toLowerCase();
      V V = S;
      for(int V=0; V<V.length; V++){
        if(V.contains(V[V])){
          V = V.replace(V[V],V[V] );
        }
      }
     if(V(V) && !V(V)){
       V += S;
     }else if(!V(V) && V(V)){
       V += S;
     }
      return V;
    }
}