import unittest
from preprocessing.process import process
from hashingFingerprinting import hashFingerprint
from winnowing import winnowing
from visual import visual


class TestProcess(unittest.TestCase):
    def test_process(self):  # example of test function for process unit test
        processed = process('testfiles/databaseFile1.py')
        self.assertEqual(processed, ('def fun1():\n'
                                     ' var1 = 1 + 2\n'
                                     ' var2 = var1 + var1\n'
                                     ' var3 = var2 + 1\n'
                                     ' return var3\n'
                                     'def fun2(var4, input2):\n'
                                     ' var5 = "abcd"\n'
                                     ' var6 = "cda"\n'
                                     ' var7 = var5 + var6\n'
                                     ' return var6 \n'
                                     'def fun3():\n'
                                     ' var1 = 1\n'
                                     ' var2 = "var2"\n'
                                     ' var3 = True\n'
                                     'def fun4(var1):\n'
                                     ' var1 = var1 + [1]\n'
                                     'fun1()\n'
                                     'fun2("var1","var2")\n'
                                     'fun3()\n'
                                     'fun4([4,3,2])'
                                     ))


class TestHashFingerprint(unittest.TestCase):
    def test_hashingFunction(self):  # example of test function for process unit test
        processed = process('testfiles/databaseFile1.py')
        fingerprint = hashFingerprint.hashingFunction(processed, 4)
        self.assertEqual(fingerprint, [([1], 1440), ([1], 1382), ([1], 1265), ([1], 1008),
                                       ([1], 1553), ([1], 1514), ([1], 1197), ([1], 692),
                                       ([1, 2], 632), ([1, 2], 742), ([1, 2], 925),
                                       ([2], 1036), ([2], 1609), ([2], 1362), ([2], 1233),
                                       ([2], 674), ([2], 613), ([2], 746), ([2], 559), ([2], 638),
                                       ([2], 542), ([2, 3], 604), ([2, 3], 638), ([2, 3], 861),
                                       ([3], 1036), ([3], 1610), ([3], 1364), ([3], 1237),
                                       ([3], 682), ([3], 682), ([3], 949), ([3], 1036), ([3], 1609),
                                       ([3], 1362), ([3], 1215), ([3], 638), ([3], 610), ([3], 805),
                                       ([3], 1036), ([3], 1609), ([3, 4], 1362), ([3, 4], 1290),
                                       ([3, 4], 853), ([4], 1036), ([4], 1611), ([4], 1366),
                                       ([4], 1241), ([4], 690), ([4], 682), ([4], 949), ([4], 1036),
                                       ([4], 1610), ([4], 1364), ([4], 1219), ([4], 646), ([4], 541),
                                       ([4, 5], 602), ([4, 5], 630), ([4, 5], 849), ([5], 1030),
                                       ([5], 1665), ([5], 1620), ([5], 1734), ([5], 1644), ([5], 1534),
                                       ([5], 1341), ([5], 1036), ([5], 1611), ([5, 6], 1434),
                                       ([5, 6], 1417), ([5, 6], 1112), ([6], 1440), ([6], 1382),
                                       ([6], 1265), ([6], 1008), ([6], 1554), ([6], 1516), ([6], 1278),
                                       ([6], 893), ([6], 1100), ([6], 1612), ([6], 1380), ([6], 1240),
                                       ([6], 761), ([6], 800), ([6], 1008), ([6], 1621), ([6], 1678),
                                       ([6], 1646), ([6], 1541), ([6], 1268), ([6, 7], 712), ([6, 7], 742),
                                       ([6, 7], 925), ([7], 1036), ([7], 1613), ([7], 1370), ([7], 1249),
                                       ([7], 706), ([7], 598), ([7], 781), ([7], 684), ([7], 955), ([7], 1466),
                                       ([7], 1414), ([7, 8], 1292), ([7, 8], 1118), ([7, 8], 733), ([8], 1036),
                                       ([8], 1614), ([8], 1372), ([8], 1253), ([8], 714), ([8], 598),
                                       ([8], 783), ([8], 690), ([8], 965), ([8], 1420), ([8, 9], 1288),
                                       ([8, 9], 1094), ([8, 9], 733), ([9], 1036), ([9], 1615), ([9], 1374),
                                       ([9], 1257), ([9], 722), ([9], 682), ([9], 949), ([9], 1036),
                                       ([9], 1613), ([9], 1370), ([9], 1231), ([9], 670), ([9], 610),
                                       ([9], 805), ([9], 1036), ([9], 1614), ([9, 10], 1372),
                                       ([9, 10], 1306), ([9, 10], 889), ([10], 1030), ([10], 1665),
                                       ([10], 1620), ([10], 1734), ([10], 1644), ([10], 1534),
                                       ([10], 1341), ([10], 1036), ([10], 1614), ([10], 1372),
                                       ([10, 11], 1292), ([10, 11], 861), ([10, 11], 960),
                                       ([11], 1440), ([11], 1382), ([11], 1265), ([11], 1008),
                                       ([11], 1555), ([11], 1518), ([11], 1205), ([11], 708),
                                       ([11, 12], 632), ([11, 12], 742), ([11, 12], 925),
                                       ([12], 1036), ([12], 1609), ([12], 1362), ([12], 1233),
                                       ([12], 674), ([12], 613), ([12, 13], 746), ([12, 13], 634),
                                       ([12, 13], 853), ([13], 1036), ([13], 1610), ([13], 1364),
                                       ([13], 1237), ([13], 682), ([13], 598), ([13], 802),
                                       ([13], 725), ([13], 1052), ([13], 1610), ([13], 1366),
                                       ([13, 14], 1212), ([13, 14], 718), ([13, 14], 733),
                                       ([14], 1036), ([14], 1611), ([14], 1366), ([14], 1241),
                                       ([14], 690), ([14], 648), ([14], 898), ([14], 937), ([14], 1463),
                                       ([14, 15], 1682), ([14, 15], 1641), ([14, 15], 1512),
                                       ([15], 1440), ([15], 1382), ([15], 1265), ([15], 1008), ([15], 1556),
                                       ([15], 1520), ([15], 1286), ([15], 909), ([15], 1100),
                                       ([15], 1609), ([15], 1371), ([15], 1248), ([15, 16], 704),
                                       ([15, 16], 742), ([15, 16], 925), ([16], 1036), ([16], 1609),
                                       ([16], 1362), ([16], 1233), ([16], 674), ([16], 682), ([16], 949),
                                       ([16], 1036), ([16], 1609), ([16], 1362), ([16], 1215), ([16], 638),
                                       ([16], 583), ([16], 703), ([16], 811), ([16, 17], 1212),
                                       ([16, 17], 1085), ([16, 17], 1496), ([17], 1553), ([17], 1514),
                                       ([17], 1197), ([17, 18], 736), ([17, 18], 805), ([17, 18], 1080),
                                       ([18], 1554), ([18], 1516), ([18], 1194), ([18], 746), ([18], 789),
                                       ([18], 1052), ([18], 1609), ([18], 1364), ([18], 1220),
                                       ([18], 650), ([18], 634), ([18], 821), ([18], 1052),
                                       ([18], 1610), ([18], 1366), ([18], 1221), ([18, 19], 720),
                                       ([18, 19], 757), ([18, 19], 1080), ([19], 1555), ([19], 1518),
                                       ([19], 1205), ([19, 20], 752), ([19, 20], 805), ([19, 20], 1080),
                                       ([20], 1556), ([20], 1520), ([20], 1259), ([20], 810),
                                       ([20], 832), ([20], 1075), ([20], 738), ([20], 694), ([20], 777),
                                       ([20], 779)]
                         )


class TestWinnowing(unittest.TestCase):

    def test_winnow(self):
        processed = process('testfiles/databaseFile1.py')
        fingerprint = hashFingerprint.hashingFunction(processed, 4)
        winnow = winnowing.winnow(4, fingerprint)
        print(winnow)
        self.assertEqual(winnow, [([1], 1440), ([1], 1382), ([1], 1265), ([1], 1008), ([1], 692),
                                  ([1, 2], 632), ([1, 2], 742), ([1, 2], 925), ([2], 1036),
                                  ([2], 674), ([2], 613), ([2], 559), ([2], 542), ([2, 3], 604),
                                  ([2, 3], 638), ([2, 3], 861), ([3], 1036), ([3], 682), ([3], 682),
                                  ([3], 949), ([3], 1036), ([3], 638), ([3], 610), ([3], 805), ([3], 1036),
                                  ([3, 4], 853), ([4], 1036), ([4], 690), ([4], 682), ([4], 949), ([4], 1036),
                                  ([4], 646), ([4], 541), ([4, 5], 602), ([4, 5], 630), ([4, 5], 849), ([5], 1030),
                                  ([5], 1620), ([5], 1534), ([5], 1341), ([5], 1036), ([5, 6], 1112), ([6], 1008),
                                  ([6], 893), ([6], 1100), ([6], 761), ([6], 800), ([6], 1008), ([6], 1541),
                                  ([6], 1268), ([6, 7], 712), ([6, 7], 742), ([6, 7], 925), ([7], 1036),
                                  ([7], 706), ([7], 598), ([7], 684), ([7], 955), ([7, 8], 1118), ([7, 8], 733),
                                  ([8], 1036), ([8], 714), ([8], 598), ([8], 690), ([8], 965), ([8, 9], 733),
                                  ([9], 1036), ([9], 722), ([9], 682), ([9], 949), ([9], 1036), ([9], 670),
                                  ([9], 610), ([9], 805), ([9], 1036), ([9, 10], 889), ([10], 1030), ([10], 1620),
                                  ([10], 1534), ([10], 1341), ([10], 1036), ([10, 11], 861), ([10, 11], 960),
                                  ([11], 1008), ([11], 708), ([11, 12], 632), ([11, 12], 742), ([11, 12], 925),
                                  ([12], 1036), ([12], 674), ([12], 613), ([12, 13], 634), ([12, 13], 853),
                                  ([13], 1036), ([13], 682), ([13], 598), ([13], 725), ([13], 1052),
                                  ([13, 14], 718), ([13, 14], 733), ([14], 1036), ([14], 690), ([14], 648),
                                  ([14], 898), ([14], 937), ([14], 1463), ([15], 1440), ([15], 1382),
                                  ([15], 1265), ([15], 1008), ([15], 909), ([15], 1100), ([15, 16], 704),
                                  ([15, 16], 742), ([15, 16], 925), ([16], 1036), ([16], 674), ([16], 682),
                                  ([16], 949), ([16], 1036), ([16], 638), ([16], 583), ([16], 703), ([16], 811),
                                  ([16, 17], 1085), ([17], 1197), ([17, 18], 736), ([17, 18], 805),
                                  ([17, 18], 1080), ([18], 746), ([18], 789), ([18], 1052), ([18], 650),
                                  ([18], 634), ([18], 821), ([18], 1052), ([18, 19], 720), ([18, 19], 757),
                                  ([18, 19], 1080), ([19, 20], 752), ([19, 20], 805), ([19, 20], 1080), ([20], 810),
                                  ([20], 738), ([20], 694)]
                         )


class TestVisual(unittest.TestCase):
    # issue getting this test to work correctly with colorama
    # wip
    def test_printFiles(self):
        a = process('testfiles/databaseFile1.py')
        a = hashFingerprint.hashingFunction(a, 4)
        a = winnowing.winnow(4, a)
        b = process('testfiles/databaseFile1.py')
        b = hashFingerprint.hashingFunction(b, 4)
        b = winnowing.winnow(4, b)


        # visual_source = visual.printFiles('testfiles/databaseFile1.py', 'testfiles/databaseFile2.py', winnow1, winnow2)
        # self.assertEqual(visual_source, visual_source)  # comparison needs fixed


if __name__ == '__main__':
    unittest.main()
